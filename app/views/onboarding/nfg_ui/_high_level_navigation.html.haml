-# Provide a JS confirmation prompt that fires on submit
- next_step_confirmation = local_assigns[:next_step_confirmation]

-# button locals
- disable_next_button = false if local_assigns[:disable_next_button].nil?
- back_button_text = local_assigns[:back_button_text]
- submit_button_text = local_assigns[:submit_button_text]

-# Fallback presenter
- presenter = NfgOnboarder::HighLevelNavigationBarPresenter.new(onboarding_session, self) if local_assigns[:presenter].nil?

.builder-nav
  .row.align-items-center.justify-content-between
    .col-6.col-lg.d-none.d-lg-block
      = ui.nfg :button, :lg, :secondary, :outlined, href: previous_wizard_path, body: back_button_text.html_safe, left_icon: 'caret-left', class: 'flex-fill', disable_with: ui.nfg(:icon, :loader), render_unless: presenter.render_previous_button_unless?, describe: 'previous-button'
    .col-12.col-lg-8.mx-auto
      = ui.nfg :steps, describe: 'nav-steps' do
        - controller.wizard_steps.each_with_index do |step, i|
          - i += 1
          = ui.nfg :step, presenter.step_status(step), step: i, href: presenter.href(step, path: wizard_path(step)), describe: "#{step}-step", icon: presenter.step_icon(step) do
            = presenter.step_body(step)
    .col-6.col-lg.text-right.d-none.d-lg-block
      = ui.nfg :button, :lg, *[:submit, (:disabled if disable_next_button)], body: submit_button_text.html_safe, icon: 'caret-right', class: 'flex-fill', confirm: next_step_confirmation, disable_with: ui.nfg(:icon, :loader)

.builder-nav-sm
  .row
    .col
      = ui.nfg :button, :lg, :block, :secondary, :outlined, href: previous_wizard_path, body: back_button_text.html_safe, left_icon: 'caret-left', disable_with: ui.nfg(:icon, :loader), render_unless: presenter.render_previous_button_unless?, describe: 'previous-button'
    .col
      = ui.nfg :button, :lg, :block, *[:submit, (:disabled if disable_next_button)], body: submit_button_text.html_safe, icon: 'caret-right', class: 'flex-fill', confirm: next_step_confirmation, disable_with: ui.nfg(:icon, :loader)
